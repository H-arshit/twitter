exit
n
react
n
exit
n
react
n
exit
n
react
n
exit
n
react
n
exit
n
Reaction.all
n
react
n
exit
Reaction.create(user: current_user, tweet: @tweet, type: @reaction_code).errors.messages
Reaction.create(user: current_user, tweet: @tweet, type: reaction_code).errors.messages
n
exit
Reaction.create(user: current_user, tweet: @tweet, type: reaction_code).errors.messages
n
exit
Reaction.create(user: current_user, tweet: @tweet, type: reaction_code).errors.messages
n
exit
Reaction.create(user: current_user, tweet: @tweet, type: 3).errors.messagesexit
current_user.id.class
current_user.id
current_user
Reaction.create(user: current_user, tweet: @tweet, type: 3).errors.messages
Reaction.create(user: current_user, tweet: @tweet, type: 3)
Reaction.create(user: current_user, tweet: @tweet, type: reaction_code).errors.messages
Reaction.create(user: current_user, tweet: @tweet, type: reaction_code)
react.error
error
n
react
n
exit
abc.Superclass
abc.SuperClass
abc.superClass
abc.superclass
abc.to_int
abc.suppress
abc.super
abc.fixnum.super
abc.class
abc
abc =Integer(reaction_code)
Integer(reaction_code)
reaction_code.to_int.class
reaction_code.to_s.class
reaction_code.to_int
reaction_code.to_int.class
reaction_code.superclass.class
reaction_code.supercalss.class
reaction_code.class
exit
reaction_code.to_i.class
reaction_code.to_i
reaction_code = reaction_code.to_i
reaction_code.class
reaction_code.Class
reaction_code
exit
n
reaction_code
quit
exit
result
result = 	Tweet.where(user_id: users).order(created_at: :desc)
var result = Tweet.where(user_id: users).order(created_at: :desc)
Tweet.where(user_id: users).order(created_at: :desc)
quit
end
e
n
tweet
n
